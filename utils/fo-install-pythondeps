#!/usr/bin/env bash
# FOSSology fo-install-pythondeps script
# Copyright (C) 2022 Kaushlendra Pratap <kaushlendrapratap.9837@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# This script helps you install build and runtime dependencies on a system.
# It is NOT indented to replace package dependencies, it's just a tool to
# make testing the "upstream" build and install process. If you determine
# this script isn't installing something you think it should, consult
# the packaging metadata for the system in question as that is the
# canonical location for such info, then fix it there first and also
# update this file and the INSTALL document.

show_help() {
  cat <<EOF
Usage: fo-install-pythondeps [options]
  -r or --runtime    : install runtime dependencies
  -b or --buildtime  : install buildtime dependencies
  -e or --everything : install all dependencies (default)
  -y                 : Automatic yes to prompts
  -h or --help       : this help text
EOF
}

source "$(dirname ${BASH_SOURCE[0]})/utils.sh"

#
# Don't show the -y option. Should only be used for install testing, as using
# it without being careful can destroy your system.
#
YesOpt=''

EVERYTHING=''
RUNTIME=''
BUILDTIME=''

## Options parsing and setup
# parse options
OPTS=$(getopt -o rbeohy --long runtime,buildtime,everything,help -n 'fo-installdeps' -- "$@")

if [[ $? -ne 0 ]]; then
   OPTS="--help"
fi

eval set -- "$OPTS"

# if no options or just -y then do everything
if [[ $OPTS == ' --' || $OPTS == ' -y --' ]]; then
  EVERYTHING=true
fi

while true; do
  case "$1" in
    -r|--runtime)     RUNTIME=true; shift;;
    -b|--buildtime)   BUILDTIME=true; shift;;
    -e|--everything)  EVERYTHING=true; shift;;
    -y)               YesOpt='-y'; shift;;
    -h|--help)        show_help; exit;;
    --)               shift; break;;
    *)                echo "ERROR: option $1 not recognised"; exit 1;;
  esac
done

set -o errexit -o nounset -o pipefail

must_run_as_root
need_lsb_release

if [[ $EVERYTHING ]]; then
  echo "*** Installing both runtime and buildtime Python dependencies ***"
  RUNTIME=true
  BUILDTIME=true
fi

# figure out what distro we're on
DISTRO=$(lsb_release --id --short)
CODENAME=$(lsb_release --codename --short)

########################################################################

echo "install python dependencies"

if [[ $BUILDTIME ]]; then
  echo "*** Installing $DISTRO buildtime python dependencies ***";
  case "$DISTRO" in
    Debian|Ubuntu)
      apt-get $YesOpt install \
        python3 python3-pip
      ;;
    Fedora|RedHatEnterprise*|CentOS)
      yum $YesOpt install \
        python3-pip
      ;;
    *) echo "ERROR: distro not recognised, please fix and send a patch"; exit 1;;
  esac
fi

########################################################################

if [[ $RUNTIME ]]; then
  echo "*** Installing $DISTRO runtime python dependencies ***";
  if id "fossy" &>/dev/null; then
    su fossy -c 'mkdir -p $HOME/pythondeps && touch $HOME/.bashrc'
    su fossy -c 'grep -qF pythondeps $HOME/.bashrc || printf "export PATH=\"$PATH:$HOME/pythondeps/bin\"\nexport PYTHONPATH=\"$HOME/pythondeps\"" >> $HOME/.bashrc'
  else
    echo "*** User fossy does not exist, not installing python dependencies ***"
  fi
fi

########################################################################
options=''
if [[ $BUILDTIME ]]; then
  options="$options -b"
fi

if [[ $RUNTIME ]]; then
  options="$options -r"
fi

if [[ $YesOpt ]]; then
  options="$options -y"
fi
mods_dir="$(dirname "$0")/../src/" ## get the directory where fo-installdeps resides

find "$mods_dir" -type f -name mod_deps_py -execdir bash -cv "{} $options" \;

########################################################################
